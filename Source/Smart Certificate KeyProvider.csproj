<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="15.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <Import Project="packages\GitVersionTask.5.1.3\build\GitVersionTask.props" Condition="Exists('packages\GitVersionTask.5.1.3\build\GitVersionTask.props')" />
  <Import Project="$(MSBuildExtensionsPath)\$(MSBuildToolsVersion)\Microsoft.Common.props" Condition="Exists('$(MSBuildExtensionsPath)\$(MSBuildToolsVersion)\Microsoft.Common.props')" />
  <PropertyGroup>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProjectGuid>{1FBC0E45-0C76-4346-967B-10D681FB712E}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>SmartCertificateKeyProviderPlugin</RootNamespace>
    <AssemblyName>SmartCertificateKeyProviderPlugin</AssemblyName>
    <TargetFrameworkVersion>v4.7.1</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <NuGetPackageImportStamp>
    </NuGetPackageImportStamp>
    <TargetFrameworkProfile />
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Debug|AnyCPU' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>bin\Debug\</OutputPath>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
    <CodeAnalysisRuleSet>Smart Certificate KeyProvider.ruleset</CodeAnalysisRuleSet>
    <RunCodeAnalysis>true</RunCodeAnalysis>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Release|AnyCPU' ">
    <DebugType>pdbonly</DebugType>
    <Optimize>true</Optimize>
    <OutputPath>bin\Release\</OutputPath>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
    <CodeAnalysisRuleSet>Smart Certificate KeyProvider.ruleset</CodeAnalysisRuleSet>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="KeePass">
      <HintPath>..\Dependencies\KeePass.exe</HintPath>
    </Reference>
    <Reference Include="System" />
    <Reference Include="System.Core" />
    <Reference Include="System.Security" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml.Linq" />
    <Reference Include="System.Data.DataSetExtensions" />
    <Reference Include="Microsoft.CSharp" />
    <Reference Include="System.Data" />
    <Reference Include="System.Net.Http" />
    <Reference Include="System.Xml" />
  </ItemGroup>
  <ItemGroup>
    <Compile Include="Extensions\StringExtension.cs" />
    <Compile Include="SmartCertificateKeyProvider.cs" />
    <Compile Include="Properties\AssemblyInfo.cs" />
    <Compile Include="SmartCertificateKeyProviderPluginExt.cs" />
    <Compile Include="UsedCertificateCache.cs" />
  </ItemGroup>
  <ItemGroup>
    <None Include="packages.config" />
    <None Include="Smart Certificate KeyProvider.ruleset" />
  </ItemGroup>
  <Import Project="$(MSBuildToolsPath)\Microsoft.CSharp.targets" />
  <Target Name="WriteVersionFile" AfterTargets="Build">
    <ItemGroup>
      <PluginVersion Include=":" />
      <PluginVersion Include="$(TargetName):$(GitVersion_MajorMinorPatch)" />
      <PluginVersion Include=":" />
    </ItemGroup>
    <WriteLinesToFile File="$(SolutionDir)..\PluginVersion.txt" Lines="@(PluginVersion)" Overwrite="true" Encoding="UTF-8" />
  </Target>
  <PropertyGroup>
    <PostBuildEvent>
    </PostBuildEvent>
  </PropertyGroup>
  <Target Name="EnsureNuGetPackageBuildImports" BeforeTargets="PrepareForBuild">
    <PropertyGroup>
      <ErrorText>This project references NuGet package(s) that are missing on this computer. Use NuGet Package Restore to download them.  For more information, see http://go.microsoft.com/fwlink/?LinkID=322105. The missing file is {0}.</ErrorText>
    </PropertyGroup>
    <Error Condition="!Exists('packages\GitVersionTask.5.1.3\build\GitVersionTask.props')" Text="$([System.String]::Format('$(ErrorText)', 'packages\GitVersionTask.5.1.3\build\GitVersionTask.props'))" />
    <Error Condition="!Exists('packages\GitVersionTask.5.1.3\build\GitVersionTask.targets')" Text="$([System.String]::Format('$(ErrorText)', 'packages\GitVersionTask.5.1.3\build\GitVersionTask.targets'))" />
  </Target>
  <Import Project="packages\GitVersionTask.5.1.3\build\GitVersionTask.targets" Condition="Exists('packages\GitVersionTask.5.1.3\build\GitVersionTask.targets')" />
</Project>